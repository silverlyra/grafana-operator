name: PR Validation

on: pull_request

env:
  NAME: "grafana-operator"

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Clone repo
        uses: actions/checkout@v2.3.4
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: "1.16"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          version: "v1.40.1"
          only-new-issues: true

  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v2.3.4
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: "1.16"
      - name: Run fmt
        run: |
          make fmt
      - name: Check if working tree is dirty
        run: |
          if [[ $(git status --porcelain) ]]; then
            git diff
            echo 'run make fmt and commit changes'
            exit 1
          fi

  manifests:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v2.3.4
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: "1.16"
      - name: Run manifests
        run: |
          make manifests
      - name: Check if working tree is dirty
        run: |
          if [[ $(git status --porcelain) ]]; then
            git diff
            echo 'run make manifests and commit changes'
            exit 1
          fi

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v2.3.4
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: "1.16"
      - name: Run test
        run: |
          make test

  build-container:
    runs-on: ubuntu-latest
    env:
      DOCKER_PLATFORMS: linux/amd64,linux/arm64
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Clone repo and checkout submodules
        uses: actions/checkout@v2.3.4
        with:
          submodules: recursive
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: "1.16"
      - name: Prepare
        id: prep
        run: |
          VERSION=sha-${GITHUB_SHA::8}
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF/refs\/tags\//}
          fi
          echo ::set-output name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=VERSION::${VERSION}
          echo ::set-output name=BUILDARCH::$(go env GOARCH)
      - name: Lint Dockerfile with hadolint
        uses: brpaz/hadolint-action@v1.5.0
        with:
          dockerfile: Dockerfile
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - name: Build and push to ephemeral registry
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: true
          tags: localhost:${{ job.services.registry.ports[5000] }}/${{ env.NAME }}:${{ steps.prep.outputs.VERSION }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: registry:${{ job.services.registry.ports[5000] }}/${{ env.NAME }}:${{ steps.prep.outputs.VERSION }}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"
        env:
          TRIVY_NON_SSL: "true"
